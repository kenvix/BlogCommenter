/*
 * This file is generated by jOOQ.
 */
package com.kenvix.commenter.dao.jooq.tables.records;


import com.kenvix.commenter.dao.jooq.tables.Post;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PostRecord extends UpdatableRecordImpl<PostRecord> implements Record2<UInteger, String> {

    private static final long serialVersionUID = 15047805;

    /**
     * Setter for <code>commentserver.post.postid</code>. Hexo Article ID(See post)
     */
    public void setPostid(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>commentserver.post.postid</code>. Hexo Article ID(See post)
     */
    public UInteger getPostid() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>commentserver.post.title</code>. Hexo Article Title
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>commentserver.post.title</code>. Hexo Article Title
     */
    public String getTitle() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<UInteger, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<UInteger, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return Post.POST.POSTID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Post.POST.TITLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component1() {
        return getPostid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getPostid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostRecord value1(UInteger value) {
        setPostid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostRecord value2(String value) {
        setTitle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostRecord values(UInteger value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PostRecord
     */
    public PostRecord() {
        super(Post.POST);
    }

    /**
     * Create a detached, initialised PostRecord
     */
    public PostRecord(UInteger postid, String title) {
        super(Post.POST);

        set(0, postid);
        set(1, title);
    }
}
