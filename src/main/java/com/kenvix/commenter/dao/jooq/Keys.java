/*
 * This file is generated by jOOQ.
 */
package com.kenvix.commenter.dao.jooq;


import com.kenvix.commenter.dao.jooq.tables.Post;
import com.kenvix.commenter.dao.jooq.tables.records.PostRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;
import org.jooq.types.UInteger;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>commentserver</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<PostRecord, UInteger> IDENTITY_POST = Identities0.IDENTITY_POST;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<PostRecord> KEY_POST_PRIMARY = UniqueKeys0.KEY_POST_PRIMARY;
    public static final UniqueKey<PostRecord> KEY_POST_TITLE = UniqueKeys0.KEY_POST_TITLE;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<PostRecord, UInteger> IDENTITY_POST = Internal.createIdentity(Post.POST, Post.POST.POSTID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<PostRecord> KEY_POST_PRIMARY = Internal.createUniqueKey(Post.POST, "KEY_post_PRIMARY", Post.POST.POSTID);
        public static final UniqueKey<PostRecord> KEY_POST_TITLE = Internal.createUniqueKey(Post.POST, "KEY_post_title", Post.POST.TITLE);
    }
}
